#!/usr/bin/env python2
import commands

GREEN = '\033[92m'
RED = '\033[91m'
YELLOW = '\033[93m'
ENDC = '\033[0m'

expected_processes = ['sshd', 'agetty', 'syslog-ng', 'cron']

def get_top_level_processes(nodes):
    procs = []
    for node in nodes:
        stat = commands.getstatusoutput('lxc-info -s -n %s' % node)[1].split(' ')[-1]
        if stat == 'RUNNING':
            ok, ps_out = commands.getstatusoutput('lxc-attach -n %s -- ps --no-headers -ax -o pid -o comm -o ppid' % node)
            if ok == 0:
                for proc in ps_out.rstrip('\n').split('\n'):
                    fields = proc.split()
                    procs.append({'nodename': node, 'pid': fields[0], 'procname': fields[1], 'ppid': fields[2]})
    return procs

def add_colour(s, col):
    return col + s + ENDC

def format_stat(stat):
    if stat == 'running':
        stat = add_colour(stat, GREEN)
    elif stat == 'stopped':
        stat = add_colour(stat, RED)
    return stat

def format_top_level_processes(allprocs, node_name):
    procs = [proc for proc in allprocs if proc['nodename'] == node]
    if len(procs) > 0:
        initpid = [proc['pid'] for proc in procs if proc['procname'] == 'systemd'][0]
        services = [proc['procname'] for proc in procs if proc['ppid'] == initpid]
        expected_services = [service for service in services if service in expected_processes]
        special_services = [service for service in services if not service in expected_processes]
        return ', '.join([add_colour(s, YELLOW) for s in special_services] + expected_services)
    else:
        return ''


# get a list of lxc nodes configured in /etc/lxc
# nodes = commands.getstatusoutput('find /var/lib/lxc/ -maxdepth 2 -name "config" | xargs grep "lxc\.utsname" | sed "s/lxc\.utsname = //g" | sort')[1].split('\n')
nodes = commands.getstatusoutput('lxc-ls')[1].split('\n')

# calculate output table based on max length of node names
maxnodelen = max([4]+[len(node) for node in nodes])
fmt = " %%-%ds | %%-7s | %%s" % (maxnodelen)

# get status of each and print it out
print fmt % ('NAME', 'STATUS', 'SERVICES')
allprocs = get_top_level_processes(nodes)

for node in nodes:
    stat = commands.getstatusoutput('lxc-info -s -n %s' % (node))[1].split(' ')[-1].lower()
    print fmt % (node, format_stat(stat), format_top_level_processes(allprocs, node))


